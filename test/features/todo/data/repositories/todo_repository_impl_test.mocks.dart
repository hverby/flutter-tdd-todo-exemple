// Mocks generated by Mockito 5.3.2 from annotations
// in notey/test/features/todo/data/repositories/todo_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:notey/core/platform/network/network_info.dart' as _i7;
import 'package:notey/features/todo/data/datasources/todo_local_datasource.dart'
    as _i2;
import 'package:notey/features/todo/data/datasources/todo_remote_datasource.dart'
    as _i5;
import 'package:notey/features/todo/data/models/todo_model.dart' as _i4;
import 'package:notey/features/todo/data/models/todo_payload.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TodoLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoLocalDataSource extends _i1.Mock
    implements _i2.TodoLocalDataSource {
  MockTodoLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.TodoModel>> getAllTodosFromLocal() => (super.noSuchMethod(
        Invocation.method(
          #getAllTodosFromLocal,
          [],
        ),
        returnValue: _i3.Future<List<_i4.TodoModel>>.value(<_i4.TodoModel>[]),
      ) as _i3.Future<List<_i4.TodoModel>>);
  @override
  _i3.Future<void> cacheTodos(List<_i4.TodoModel>? todos) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheTodos,
          [todos],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [TodoRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRemoteDataSource extends _i1.Mock
    implements _i5.TodoRemoteDataSource {
  MockTodoRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.TodoModel>> getAllTodos() => (super.noSuchMethod(
        Invocation.method(
          #getAllTodos,
          [],
        ),
        returnValue: _i3.Future<List<_i4.TodoModel>>.value(<_i4.TodoModel>[]),
      ) as _i3.Future<List<_i4.TodoModel>>);
  @override
  _i3.Future<Map<dynamic, dynamic>> addTodo(_i6.TodoPayload? todoPayload) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [todoPayload],
        ),
        returnValue:
            _i3.Future<Map<dynamic, dynamic>>.value(<dynamic, dynamic>{}),
      ) as _i3.Future<Map<dynamic, dynamic>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
